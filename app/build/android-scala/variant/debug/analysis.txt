format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug
compile options:
4 items
0 -> -deprecation
1 -> -unchecked
2 -> -encoding
3 -> UTF-8
javac options:
14 items
00 -> -source
01 -> 1.7
02 -> -target
03 -> 1.7
04 -> -d
05 -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug
06 -> -g
07 -> -encoding
08 -> UTF-8
09 -> -bootclasspath
10 -> /Users/laszlobalo/Library/Android/sdk/platforms/android-24/android.jar
11 -> -s
12 -> /Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/apt/debug
13 -> -XDuseUnsharedTable=true
compiler version:
1 items
0 -> 2.11.7
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
41 items
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/buildConfig/debug/at/fh/swengb/sierpinski_android/BuildConfig.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/BuildConfig.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$anim.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$attr.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$bool.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$color.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$dimen.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$drawable.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$id.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$integer.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$layout.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$string.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$style.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$styleable.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R$attr.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R$color.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R$dimen.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R$style.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R$styleable.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/gridlayout/R$attr.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/gridlayout/R$dimen.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/gridlayout/R$id.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/gridlayout/R$styleable.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/gridlayout/R.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$anim.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$attr.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$bool.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$color.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$dimen.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$drawable.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$id.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$integer.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$layout.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$mipmap.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$string.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$style.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$styleable.class
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R.class
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski/MainActivity.class
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski/SierpinskiView.class
binary dependencies:
11 items
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/buildConfig/debug/at/fh/swengb/sierpinski_android/BuildConfig.java -> /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/jre/lib/rt.jar
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/jre/lib/rt.jar
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/jre/lib/rt.jar
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/jre/lib/rt.jar
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/jre/lib/rt.jar
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> /Users/laszlobalo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.11.7/f75e7acabd57b213d6f61483240286c07213ec0e/scala-library-2.11.7.jar
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> /Users/laszlobalo/Library/Android/sdk/platforms/android-24/android.jar
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> /Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/exploded-aar/com.android.support/appcompat-v7/24.1.1/jars/classes.jar
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/jre/lib/rt.jar
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> /Users/laszlobalo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.11.7/f75e7acabd57b213d6f61483240286c07213ec0e/scala-library-2.11.7.jar
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> /Users/laszlobalo/Library/Android/sdk/platforms/android-24/android.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
6 items
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/buildConfig/debug/at/fh/swengb/sierpinski_android/BuildConfig.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/buildConfig/debug/at/fh/swengb/sierpinski_android/BuildConfig.java
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> /Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> /Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java
member reference external dependencies:
0 items
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
41 items
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/buildConfig/debug/at/fh/swengb/sierpinski_android/BuildConfig.java -> at.fh.swengb.sierpinski_android.BuildConfig
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$anim
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$attr
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$bool
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$color
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$dimen
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$drawable
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$id
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$integer
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$layout
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$string
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$style
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$styleable
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> android.support.v7.cardview.R
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> android.support.v7.cardview.R$attr
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> android.support.v7.cardview.R$color
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> android.support.v7.cardview.R$dimen
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> android.support.v7.cardview.R$style
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> android.support.v7.cardview.R$styleable
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> android.support.v7.gridlayout.R
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> android.support.v7.gridlayout.R$attr
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> android.support.v7.gridlayout.R$dimen
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> android.support.v7.gridlayout.R$id
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> android.support.v7.gridlayout.R$styleable
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$anim
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$attr
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$bool
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$color
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$dimen
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$drawable
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$id
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$integer
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$layout
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$mipmap
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$string
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$style
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> at.fh.swengb.sierpinski_android.R$styleable
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> at.fh.swengb.sierpinski.MainActivity
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> at.fh.swengb.sierpinski.SierpinskiView
used names:
72 items
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> <init>
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> AppCompatActivity
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> Bundle
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> MainActivity
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> R
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> Unit
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> android
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> app
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> at
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> fh
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> onCreate
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> os
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> savedInstanceState
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> scala
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> setContentView
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> sierpinski
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> sierpinski_android
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> support
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> swengb
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> v7
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> *
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> +
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> -
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> /
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> <init>
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> >
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> Array
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> AttributeSet
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> Canvas
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> Context
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> Float
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> Int
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> Math
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> Paint
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> SierpinskiView
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> Unit
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> View
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> android
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> apply
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> at
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> attrs
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> canvas
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> content
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> context
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> depth
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> drawLines
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> drawSierpinski
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> drawSubTriangle
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> fh
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> getWidth
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> graphics
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> java
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> lang
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> newDepth
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> onDraw
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> paint
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> scala
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> sierpinski
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> sqrt
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> swengb
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> toDouble
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> toFloat
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> util
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> view
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> x
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> x1
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> x2
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> x3
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> y
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> y1
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> y2
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> y3
product stamps:
41 items
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$anim.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$attr.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$bool.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$color.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$dimen.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$drawable.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$id.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$integer.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$layout.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$string.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$style.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R$styleable.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/appcompat/R.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R$attr.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R$color.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R$dimen.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R$style.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R$styleable.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/cardview/R.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/gridlayout/R$attr.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/gridlayout/R$dimen.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/gridlayout/R$id.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/gridlayout/R$styleable.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/android/support/v7/gridlayout/R.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski/MainActivity.class -> lastModified(1481819084000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski/SierpinskiView.class -> lastModified(1481819275000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/BuildConfig.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$anim.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$attr.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$bool.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$color.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$dimen.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$drawable.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$id.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$integer.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$layout.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$mipmap.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$string.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$style.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R$styleable.class -> lastModified(1481817471000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/classes/debug/at/fh/swengb/sierpinski_android/R.class -> lastModified(1481817471000)
source stamps:
7 items
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/buildConfig/debug/at/fh/swengb/sierpinski_android/BuildConfig.java -> hash(cc5c711dde48a780606f86b0294fcd0250f3684c)
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> hash(fb52d67a3ef8fb0140d0fd4b7cdbd5b688384339)
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> hash(7ec1cbe5ebb27bfc59a16a976b5a861f93b78846)
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> hash(59041f485195aea71db2a4d83c01d59c57aeb50a)
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> hash(a553ce8172a5e448abd0e4b381560bf300c14bc3)
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> hash(315352f067d787f328ddf0a763de2ae502d0a226)
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> hash(f2cf91834a956276bdc538c8a5c253aab0becfba)
binary stamps:
4 items
/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1475798494000)
/Users/laszlobalo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.11.7/f75e7acabd57b213d6f61483240286c07213ec0e/scala-library-2.11.7.jar -> lastModified(1480070420000)
/Users/laszlobalo/Library/Android/sdk/platforms/android-24/android.jar -> lastModified(1476361119000)
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/exploded-aar/com.android.support/appcompat-v7/24.1.1/jars/classes.jar -> lastModified(1481817468000)
class names:
4 items
/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/jre/lib/rt.jar -> java.lang.Math
/Users/laszlobalo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.11.7/f75e7acabd57b213d6f61483240286c07213ec0e/scala-library-2.11.7.jar -> scala.Unit
/Users/laszlobalo/Library/Android/sdk/platforms/android-24/android.jar -> android.view.View
/Users/laszlobalo/workspace/sierpinski-android/app/build/intermediates/exploded-aar/com.android.support/appcompat-v7/24.1.1/jars/classes.jar -> android.support.v7.app.AppCompatActivity
internal apis:
7 items
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/buildConfig/debug/at/fh/swengb/sierpinski_android/BuildConfig.java -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHA/NZj1AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAD3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cOevbnd0AAZub3RpZnlzcQB+AAzsoGRQdAAMVkVSU0lPTl9DT0RFc3EAfgAMEkHwJHQABHdhaXRzcQB+AAxd9lWbdAAGZXF1YWxzc3EAfgAM6A8EgHQABURFQlVHc3EAfgAM9yaYHnQACW5vdGlmeUFsbHNxAH4ADKy//zV0AAZGTEFWT1JzcQB+AAzwbQtwdAAMVkVSU0lPTl9OQU1Fc3EAfgAM//a4PnQABjxpbml0PnNxAH4ADLT2H1t0AA5BUFBMSUNBVElPTl9JRHNxAH4ADJyUR7p0AAtCdWlsZENvbmZpZ3NxAH4ADCkUYhh0AAh0b1N0cmluZ3NxAH4ADFXOuAt0AAhnZXRDbGFzc3NxAH4ADDUHhIV0AApCVUlMRF9UWVBFc3EAfgAMfzCBUHQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ANXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwBHQAK2F0LmZoLnN3ZW5nYi5zaWVycGluc2tpX2FuZHJvaWQuQnVpbGRDb25maWd1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS50aHJvd3NzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cABwc3IAIHhzYnRpLlNhZmVMYXp5JCRhbm9uZnVuJHN0cmljdCQxAAAAAAAAAAACAAFMAAd2YWx1ZSQxcQB+AE94cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AE4AcHNxAH4AU3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgA1TAAJaW5oZXJpdGVkcQB+ADVMAAdwYXJlbnRzcQB+ADV4cQB+AFdzcQB+AE4AcHNxAH4AU3VxAH4AMAAAAABzcQB+AE4AcHNxAH4AU3VxAH4AMAAAAABzcQB+AE4AcHNxAH4AU3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAABc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AVnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AVnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ac3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AdHNxAH4AMnEAfgA/cQB+AEFxAH4AQ3EAfgBEcQB+AEZ+cQB+AEd0AAZNb2R1bGV1cQB+AEsAAAAAc3EAfgBOAHBzcQB+AFNxAH4AWHNxAH4ATgBwc3EAfgBTc3EAfgBbc3EAfgBOAHBzcQB+AFN1cQB+ADAAAAAAc3EAfgBOAHBzcQB+AFN1cQB+ADAAAAAAc3EAfgBOAHBzcQB+AFN1cQB+AGUAAAAAdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAfYXQuZmguc3dlbmdiLnNpZXJwaW5za2lfYW5kcm9pZHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWQM0OKN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABUL1VzZXJzL2xhc3psb2JhbG8vd29ya3NwYWNlL3NpZXJwaW5za2ktYW5kcm9pZC9hcHAvYnVpbGQvaW50ZXJtZWRpYXRlcy9jbGFzc2VzL2RlYnVndAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUzFxxHd5Ip4Bgb4awKU/NAlDzaEw=
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> 

/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHCIvGmGAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAMXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cOni19t0ABljYXJkdmlld19saWdodF9iYWNrZ3JvdW5kc3EAfgAM3OZ3THQABm5vdGlmeXNxAH4ADAikdBt0ABpDYXJkVmlld19hbmRyb2lkX21pbkhlaWdodHNxAH4ADFjH2UN0AAR3YWl0c3EAfgAMCARrbHQABlIkYXR0cnNxAH4ADGj8kJJ0AAZlcXVhbHNzcQB+AAxGooj/dAAdQ2FyZFZpZXdfY29udGVudFBhZGRpbmdCb3R0b21zcQB+AAwH1kL2dAATY29udGVudFBhZGRpbmdSaWdodHNxAH4ADBaVjcR0AA5DYXJkVmlld19MaWdodHNxAH4ADBO7bON0AB1DYXJkVmlld19jYXJkVXNlQ29tcGF0UGFkZGluZ3NxAH4ADOxqKOF0ABZDYXJkVmlld19jYXJkRWxldmF0aW9uc3EAfgAMnnbixnQAIUNhcmRWaWV3X2NhcmRQcmV2ZW50Q29ybmVyT3ZlcmxhcHNxAH4ADIyxbAV0AAhDYXJkVmlld3NxAH4ADJjMISp0ABxDYXJkVmlld19jYXJkQmFja2dyb3VuZENvbG9yc3EAfgAM9xvxwXQAHGNhcmR2aWV3X2NvbXBhdF9pbnNldF9zaGFkb3dzcQB+AAwZ7WVrdAAQY2FyZE1heEVsZXZhdGlvbnNxAH4ADP18gQB0AAlub3RpZnlBbGxzcQB+AAxniDd3dAAaY2FyZHZpZXdfZGVmYXVsdF9lbGV2YXRpb25zcQB+AAy0Av93dAAGPGluaXQ+c3EAfgAMCpBrb3QAG0NhcmRWaWV3X2NvbnRlbnRQYWRkaW5nTGVmdHNxAH4ADLm3NpR0ABdDYXJkVmlld19jb250ZW50UGFkZGluZ3NxAH4ADD4tohV0ABhjYXJkUHJldmVudENvcm5lck92ZXJsYXBzcQB+AAzEhVQCdAATY2FyZEJhY2tncm91bmRDb2xvcnNxAH4ADI2YxRp0ABxDYXJkVmlld19jb250ZW50UGFkZGluZ1JpZ2h0c3EAfgAM7T0it3QAGkNhcmRWaWV3X2NvbnRlbnRQYWRkaW5nVG9wc3EAfgAMVPaxjHQAEmNvbnRlbnRQYWRkaW5nTGVmdHNxAH4ADI+CsEl0ABdjYXJkdmlld19kZWZhdWx0X3JhZGl1c3NxAH4ADI90lad0ABlDYXJkVmlld19jYXJkQ29ybmVyUmFkaXVzc3EAfgAMqgf+63QADUJhc2VfQ2FyZFZpZXdzcQB+AAxdo3PrdAAIdG9TdHJpbmdzcQB+AAxg1SctdAAQY2FyZENvcm5lclJhZGl1c3NxAH4ADC+72lV0AA5jb250ZW50UGFkZGluZ3NxAH4ADJwm7st0ABhjYXJkdmlld19kYXJrX2JhY2tncm91bmRzcQB+AAxkzHDodAAIZ2V0Q2xhc3NzcQB+AAzM34eCdAAZQ2FyZFZpZXdfY2FyZE1heEVsZXZhdGlvbnNxAH4ADBCGHv10AAdSJGNvbG9yc3EAfgAMFiBeXnQADUNhcmRWaWV3X0RhcmtzcQB+AAwsbGMRdAAZQ2FyZFZpZXdfYW5kcm9pZF9taW5XaWR0aHNxAH4ADO2lwid0AAdSJGRpbWVuc3EAfgAMTu/aqXQAAVJzcQB+AAzck4MqdAAUY2FyZFVzZUNvbXBhdFBhZGRpbmdzcQB+AAz8wN3WdAAZY2FyZHZpZXdfc2hhZG93X2VuZF9jb2xvcnNxAH4ADHn3ket0ABtjYXJkdmlld19zaGFkb3dfc3RhcnRfY29sb3JzcQB+AAwfii9HdAAUY29udGVudFBhZGRpbmdCb3R0b21zcQB+AAzN5txbdAALUiRzdHlsZWFibGVzcQB+AAzMrCmmdAANY2FyZEVsZXZhdGlvbnNxAH4ADLZwlZB0AAdSJHN0eWxlc3EAfgAMoQr2kHQAEWNvbnRlbnRQYWRkaW5nVG9wc3EAfgAMnOObm3QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AeXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwBHQAHWFuZHJvaWQuc3VwcG9ydC52Ny5jYXJkdmlldy5SdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEudGhyb3dzc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgCTeHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgCSAHBzcQB+AJdzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AeUwACWluaGVyaXRlZHEAfgB5TAAHcGFyZW50c3EAfgB5eHEAfgCbc3EAfgCSAHBzcQB+AJd1cQB+AHQAAAAAc3EAfgCSAHBzcQB+AJd1cQB+AHQAAAAAc3EAfgCSAHBzcQB+AJd1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAXNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AJp0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AJpzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+ALd0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+ALhzcQB+AHZxAH4Ag3EAfgCFcQB+AIdxAH4AiHEAfgCKfnEAfgCLdAAGTW9kdWxldXEAfgCPAAAAAHNxAH4AkgBwc3EAfgCXcQB+AJxzcQB+AJIAcHNxAH4Al3NxAH4An3NxAH4AkgBwc3EAfgCXdXEAfgB0AAAAAHNxAH4AkgBwc3EAfgCXdXEAfgB0AAAAAHNxAH4AkgBwc3EAfgCXdXEAfgCpAAAAAHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAG2FuZHJvaWQuc3VwcG9ydC52Ny5jYXJkdmlld3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWQM0OKN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABUL1VzZXJzL2xhc3psb2JhbG8vd29ya3NwYWNlL3NpZXJwaW5za2ktYW5kcm9pZC9hcHAvYnVpbGQvaW50ZXJtZWRpYXRlcy9jbGFzc2VzL2RlYnVndAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUfsHL5euye/xZoWqXa1qGH5O3iEY=
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAuhM0ZAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAARXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cMYVoFZ0ABxHcmlkTGF5b3V0X0xheW91dF9sYXlvdXRfcm93c3EAfgAMt5YJIXQABm5vdGlmeXNxAH4ADDNt4Tl0ABRjb2x1bW5PcmRlclByZXNlcnZlZHNxAH4ADD4REGp0AAthbGlnbkJvdW5kc3NxAH4ADG1fxJZ0ABFsYXlvdXRfY29sdW1uU3BhbnNxAH4ADBTOtlN0ABxHcmlkTGF5b3V0X3Jvd09yZGVyUHJlc2VydmVkc3EAfgAMPsfBWHQABHdhaXRzcQB+AAxoRo2ddAAKR3JpZExheW91dHNxAH4ADMORVud0AAZSJGF0dHJzcQB+AAx+KOmIdAAnR3JpZExheW91dF9MYXlvdXRfYW5kcm9pZF9sYXlvdXRfbWFyZ2luc3EAfgAMtgZAEHQAJkdyaWRMYXlvdXRfTGF5b3V0X2FuZHJvaWRfbGF5b3V0X3dpZHRoc3EAfgAMFOTGrXQAFkdyaWRMYXlvdXRfb3JpZW50YXRpb25zcQB+AAwX+sjbdAANbGF5b3V0X2NvbHVtbnNxAH4ADEvgjbt0AAZlcXVhbHNzcQB+AAxfeNDqdAANYWxpZ25tZW50TW9kZXNxAH4ADFzz1t50ABBsYXlvdXRfcm93V2VpZ2h0c3EAfgAMXu0pT3QABmNlbnRlcnNxAH4ADBqkKWx0AAZib3R0b21zcQB+AAwLZ+X7dAAiR3JpZExheW91dF9MYXlvdXRfbGF5b3V0X3Jvd1dlaWdodHNxAH4ADLRhlpF0AApsYXlvdXRfcm93c3EAfgAMx1ZxrHQAI0dyaWRMYXlvdXRfTGF5b3V0X2xheW91dF9jb2x1bW5TcGFuc3EAfgAMp+Le4HQACHJvd0NvdW50c3EAfgAM5PvLW3QACmhvcml6b250YWxzcQB+AAzTzaW5dAAtR3JpZExheW91dF9MYXlvdXRfYW5kcm9pZF9sYXlvdXRfbWFyZ2luQm90dG9tc3EAfgAMRFki8HQABGxlZnRzcQB+AAw4iqbbdAAfR3JpZExheW91dF9jb2x1bW5PcmRlclByZXNlcnZlZHNxAH4ADFaGbal0AA1maWxsX3ZlcnRpY2Fsc3EAfgAMuSGle3QAD2NsaXBfaG9yaXpvbnRhbHNxAH4ADJU0MeZ0ACtHcmlkTGF5b3V0X0xheW91dF9hbmRyb2lkX2xheW91dF9tYXJnaW5MZWZ0c3EAfgAMgQu523QAD2ZpbGxfaG9yaXpvbnRhbHNxAH4ADJdkrmh0ACBHcmlkTGF5b3V0X0xheW91dF9sYXlvdXRfcm93U3BhbnNxAH4ADMr4nE10AAlub3RpZnlBbGxzcQB+AAzJrZgadAARdXNlRGVmYXVsdE1hcmdpbnNzcQB+AAwOsKDadAAgR3JpZExheW91dF9MYXlvdXRfbGF5b3V0X2dyYXZpdHlzcQB+AAzrGdB8dAAnR3JpZExheW91dF9MYXlvdXRfYW5kcm9pZF9sYXlvdXRfaGVpZ2h0c3EAfgAMePYddXQALEdyaWRMYXlvdXRfTGF5b3V0X2FuZHJvaWRfbGF5b3V0X21hcmdpblJpZ2h0c3EAfgAM2b7ulXQACHZlcnRpY2Fsc3EAfgAMsBXSAHQAFkdyaWRMYXlvdXRfY29sdW1uQ291bnRzcQB+AAz/DHOzdAAGPGluaXQ+c3EAfgAMsVMBWXQAEWNlbnRlcl9ob3Jpem9udGFsc3EAfgAMyp6bPnQABGZpbGxzcQB+AAwHOLsldAAEUiRpZHNxAH4ADIM4Vr90AAtkZWZhdWx0X2dhcHNxAH4ADGmJP+R0AAxhbGlnbk1hcmdpbnNzcQB+AAxgfeUtdAAObGF5b3V0X3Jvd1NwYW5zcQB+AAxuBr9CdAANY2xpcF92ZXJ0aWNhbHNxAH4ADPlRnbR0AAtvcmllbnRhdGlvbnNxAH4ADP2KGp90ABhHcmlkTGF5b3V0X2FsaWdubWVudE1vZGVzcQB+AAzoDqv/dAAqR3JpZExheW91dF9MYXlvdXRfYW5kcm9pZF9sYXlvdXRfbWFyZ2luVG9wc3EAfgAMXFdWqXQAH0dyaWRMYXlvdXRfTGF5b3V0X2xheW91dF9jb2x1bW5zcQB+AAz1zRLAdAAPY2VudGVyX3ZlcnRpY2Fsc3EAfgAMlfmOq3QAA2VuZHNxAH4ADKAING90AAh0b1N0cmluZ3NxAH4ADCbm9dN0AA5sYXlvdXRfZ3Jhdml0eXNxAH4ADFIqr7J0ABNHcmlkTGF5b3V0X3Jvd0NvdW50c3EAfgAMaEu2b3QAJUdyaWRMYXlvdXRfTGF5b3V0X2xheW91dF9jb2x1bW5XZWlnaHRzcQB+AAyAwAgzdAAcR3JpZExheW91dF91c2VEZWZhdWx0TWFyZ2luc3NxAH4ADCdpS310AAhnZXRDbGFzc3NxAH4ADPRH0Pt0AAVzdGFydHNxAH4ADAVHell0ABNsYXlvdXRfY29sdW1uV2VpZ2h0c3EAfgAMIomom3QAB1IkZGltZW5zcQB+AAzQypYBdAABUnNxAH4ADO5cOqd0ABFyb3dPcmRlclByZXNlcnZlZHNxAH4ADHwyPsB0AAN0b3BzcQB+AAxR2bc2dAARR3JpZExheW91dF9MYXlvdXRzcQB+AAyXmIFQdAALUiRzdHlsZWFibGVzcQB+AAxQt3E7dAAFcmlnaHRzcQB+AAwPxaHAdAALY29sdW1uQ291bnRzcQB+AAywqTDKdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgCheHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAEdAAfYW5kcm9pZC5zdXBwb3J0LnY3LmdyaWRsYXlvdXQuUnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAXQADHNjYWxhLnRocm93c3NyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4Au3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AugBwc3EAfgC/c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AKFMAAlpbmhlcml0ZWRxAH4AoUwAB3BhcmVudHNxAH4AoXhxAH4Aw3NxAH4AugBwc3EAfgC/dXEAfgCcAAAAAHNxAH4AugBwc3EAfgC/dXEAfgCcAAAAAHNxAH4AugBwc3EAfgC/dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgDCdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgDCc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgDfdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgDgc3EAfgCecQB+AKtxAH4ArXEAfgCvcQB+ALBxAH4Asn5xAH4As3QABk1vZHVsZXVxAH4AtwAAAABzcQB+ALoAcHNxAH4Av3EAfgDEc3EAfgC6AHBzcQB+AL9zcQB+AMdzcQB+ALoAcHNxAH4Av3VxAH4AnAAAAABzcQB+ALoAcHNxAH4Av3VxAH4AnAAAAABzcQB+ALoAcHNxAH4Av3VxAH4A0QAAAAB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AB1hbmRyb2lkLnN1cHBvcnQudjcuZ3JpZGxheW91dHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWQM0OKN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABUL1VzZXJzL2xhc3psb2JhbG8vd29ya3NwYWNlL3NpZXJwaW5za2ktYW5kcm9pZC9hcHAvYnVpbGQvaW50ZXJtZWRpYXRlcy9jbGFzc2VzL2RlYnVndAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUWQQfSFGVrqcdsqTYPAHVnFeutQo=
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> 

/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAl2FQTAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAABoHNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cBppls50ACBvblJldGFpbk5vbkNvbmZpZ3VyYXRpb25JbnN0YW5jZXNxAH4ADOznm+h0ABhlbmZvcmNlQ2FsbGluZ1Blcm1pc3Npb25zcQB+AAzVjiYodAAPb3Blbk9wdGlvbnNNZW51c3EAfgAMBWdE/3QADXRha2VLZXlFdmVudHNzcQB+AAwn276ldAAdb25QaWN0dXJlSW5QaWN0dXJlTW9kZUNoYW5nZWRzcQB+AAzbBeYudAAOZmluaXNoQWN0aXZpdHlzcQB+AAw5CSwxdAAab25SZXF1ZXN0UGVybWlzc2lvbnNSZXN1bHRzcQB+AAzmsYzPdAAYb25NdWx0aVdpbmRvd01vZGVDaGFuZ2Vkc3EAfgAMuHgVU3QAEGNsb3NlQ29udGV4dE1lbnVzcQB+AAyKNKMtdAASY2hlY2tVcmlQZXJtaXNzaW9uc3EAfgAMQMgYn3QACWdldE9iYkRpcnNxAH4ADH4UHr50AAtpc0Rlc3Ryb3llZHNxAH4ADK1rmcF0AAZub3RpZnlzcQB+AAxnALLjdAASdW5yZWdpc3RlclJlY2VpdmVyc3EAfgAMA3DpUXQAFnNldFZvbHVtZUNvbnRyb2xTdHJlYW1zcQB+AAwpNL/MdAALaXNJbW1lcnNpdmVzcQB+AAzNUKT4dAAac2VuZE9yZGVyZWRCcm9hZGNhc3RBc1VzZXJzcQB+AAxtneFBdAAZc2VuZFN0aWNreUJyb2FkY2FzdEFzVXNlcnNxAH4ADDlLTLZ0AB5zdXBwb3J0UG9zdHBvbmVFbnRlclRyYW5zaXRpb25zcQB+AAxMNCsRdAAUcmVxdWVzdFdpbmRvd0ZlYXR1cmVzcQB+AAy2rScfdAANb25CYWNrUHJlc3NlZHNxAH4ADDG3RiN0ABZnZXRWb2x1bWVDb250cm9sU3RyZWFtc3EAfgAMheJvnHQAG3JlbW92ZVN0aWNreUJyb2FkY2FzdEFzVXNlcnNxAH4ADKzViCV0AAhzZXRUaXRsZXNxAH4ADAc+5690ABNzZW5kU3RpY2t5QnJvYWRjYXN0c3EAfgAMBn1HTnQABm9uRHVtcHNxAH4ADEBgcK90ABBvbkF0dGFjaEZyYWdtZW50c3EAfgAMnE0mJXQAG3N1cHBvcnRTaG91bGRVcFJlY3JlYXRlVGFza3NxAH4ADATVmMx0ABxzdXBwb3J0SW52YWxpZGF0ZU9wdGlvbnNNZW51c3EAfgAMEtE1BHQADWdldE1haW5Mb29wZXJzcQB+AAzNqC1ddAAUZ2V0RXh0ZXJuYWxNZWRpYURpcnNzcQB+AAzy9znDdAAYaXNJblBpY3R1cmVJblBpY3R1cmVNb2Rlc3EAfgAM1+F3h3QAEnNldFRhc2tEZXNjcmlwdGlvbnNxAH4ADAIFaNF0ACJvbkNyZWF0ZVN1cHBvcnROYXZpZ2F0ZVVwVGFza1N0YWNrc3EAfgAM98e6cXQAD29wZW5Db250ZXh0TWVudXNxAH4ADH85akd0AAhnZXRDb2xvcnNxAH4ADA+k29B0AAxvbk1lbnVPcGVuZWRzcQB+AAy6a2bAdAAeb25TdXBwb3J0SW52YWxpZGF0ZU9wdGlvbnNNZW51c3EAfgAMMK451XQADmZpbmlzaEFmZmluaXR5c3EAfgAMZn9HZ3QABHdhaXRzcQB+AAzKrzXkdAAQbUZyYWdtZW50TWFuYWdlcnNxAH4ADPf9XDx0ABZkaXNwYXRjaFRyYWNrYmFsbEV2ZW50c3EAfgAM/nz9k3QAJXZhbGlkYXRlUmVxdWVzdFBlcm1pc3Npb25zUmVxdWVzdENvZGVzcQB+AAynxx0LdAALc2V0UHJvZ3Jlc3NzcQB+AAyQ9ntSdAAVZmluaXNoQWZ0ZXJUcmFuc2l0aW9uc3EAfgAMZdlIX3QAD2dldENvZGVDYWNoZURpcnNxAH4ADPP0m210AA10cmlnZ2VyU2VhcmNoc3EAfgAMGRolXHQAFGdldFN5c3RlbVNlcnZpY2VOYW1lc3EAfgAM+h0A2XQAE29uR2V0TGF5b3V0SW5mbGF0ZXJzcQB+AAxiFOXadAANJGFzSW5zdGFuY2VPZnNxAH4ADPEHxnR0AA11bmJpbmRTZXJ2aWNlc3EAfgAM9NjyjXQADW9wZW5GaWxlSW5wdXRzcQB+AAzzCUaSdAALZ2V0Q2FjaGVEaXJzcQB+AAzAv4HFdAAUb25BY3Rpb25Nb2RlRmluaXNoZWRzcQB+AAys1R/GdAAJb25IYXNWaWV3c3EAfgAMONgGm3QACWdldFRhc2tJZHNxAH4ADPntaR50AAtpc0ZpbmlzaGluZ3NxAH4ADGpFAtN0ABNvblNhdmVJbnN0YW5jZVN0YXRlc3EAfgAM0j7l+nQAEG1vdmVEYXRhYmFzZUZyb21zcQB+AAzzudO9dAAOY2xlYXJXYWxscGFwZXJzcQB+AAyoZai1dAASc2V0RmVhdHVyZURyYXdhYmxlc3EAfgAMF+kTRXQAEWdldFBhY2thZ2VNYW5hZ2Vyc3EAfgAM4ddIhHQAEnN0b3BNYW5hZ2luZ0N1cnNvcnNxAH4ADKDa3aJ0AAlnZXRBc3NldHNzcQB+AAzsbQ+odAAUb25QcmVwYXJlT3B0aW9uc01lbnVzcQB+AAyAoRobdAALZ2V0UmVmZXJyZXJzcQB+AAxannwPdAAMTWFpbkFjdGl2aXR5c3EAfgAMnOF6WnQACW9uS2V5RG93bnNxAH4ADM7PV2t0AAxkb1JlYWxseVN0b3BzcQB+AAzqyWtKdAAaY3JlYXRlQ29uZmlndXJhdGlvbkNvbnRleHRzcQB+AAzphsRvdAAMaXNSZXN0cmljdGVkc3EAfgAMUfXy93QAC2dldEZpbGVzRGlyc3EAfgAMyHZt4XQAB29uUGF1c2VzcQB+AAy74uAldAAOaGFzV2luZG93Rm9jdXNzcQB+AAwpKiV9dAAVbmF2aWdhdGVVcFRvRnJvbUNoaWxkc3EAfgAMdRCVhnQAEGdldExvYWRlck1hbmFnZXJzcQB+AAxK85r2dAAUc2V0U2Vjb25kYXJ5UHJvZ3Jlc3NzcQB+AAxe6ItCdAAIZ2V0VGhlbWVzcQB+AAz+HGi0dAARZ2V0Q29sb3JTdGF0ZUxpc3RzcQB+AAyvKBeidAAgZ2V0V2FsbHBhcGVyRGVzaXJlZE1pbmltdW1IZWlnaHRzcQB+AAyDR3uBdAAGZXF1YWxzc3EAfgAMghcMwHQADmdldFNlYXJjaEV2ZW50c3EAfgAM2A9RSHQAEmdldENvbnRlbnRSZXNvbHZlcnNxAH4ADKTeYMZ0ABlvbldpbmRvd0F0dHJpYnV0ZXNDaGFuZ2Vkc3EAfgAMdg71QXQADW9uUGFuZWxDbG9zZWRzcQB+AAzn9a9NdAAPb25TdGF0ZU5vdFNhdmVkc3EAfgAMzV3l0HQAGnNlbmRTdGlja3lPcmRlcmVkQnJvYWRjYXN0c3EAfgAMCsyhsnQADHNldFdhbGxwYXBlcnNxAH4ADA8GOVt0ABdtT3B0aW9uc01lbnVJbnZhbGlkYXRlZHNxAH4ADIvRllJ0ABh1bnJlZ2lzdGVyRm9yQ29udGV4dE1lbnVzcQB+AAyEu4iZdAARb25TZWFyY2hSZXF1ZXN0ZWRzcQB+AAxCdpuIdAATY2hlY2tTZWxmUGVybWlzc2lvbnNxAH4ADI3YQcJ0AAlnZXRXaW5kb3dzcQB+AAy63f+hdAAUc2hvdWxkVXBSZWNyZWF0ZVRhc2tzcQB+AAxb5xVKdAAMcmVtb3ZlRGlhbG9nc3EAfgAMZfWJQ3QADmdldEFwcGxpY2F0aW9uc3EAfgAMi8Y4/HQAFG9uRGV0YWNoZWRGcm9tV2luZG93c3EAfgAM8X+2/HQAD3N0YXJ0QWN0aW9uTW9kZXNxAH4ADB6C3Rd0AAhvblJlc3VtZXNxAH4ADG6XCyl0ABZjaGVja0NhbGxpbmdQZXJtaXNzaW9uc3EAfgAMHiZJAHQAGm9uV2luZG93U3RhcnRpbmdBY3Rpb25Nb2Rlc3EAfgAMaqZjB3QAC29uTmV3SW50ZW50c3EAfgAMp2jejnQAF2dldFN1cHBvcnRMb2FkZXJNYW5hZ2Vyc3EAfgAMb/Dn+nQAH2dldFdhbGxwYXBlckRlc2lyZWRNaW5pbXVtV2lkdGhzcQB+AAzUGaSvdAAYaXNEZXZpY2VQcm90ZWN0ZWRTdG9yYWdlc3EAfgAM/pIp6XQAEWF0dGFjaEJhc2VDb250ZXh0c3EAfgAMBoJiz3QAE29uQ3JlYXRlQ29udGV4dE1lbnVzcQB+AAwp8VYzdAAMYXNJbnN0YW5jZU9mc3EAfgAMWMgq4XQAE2dldEV4dGVybmFsQ2FjaGVEaXJzcQB+AAy3Hat/dAANc2VuZEJyb2FkY2FzdHNxAH4ADAdLAyl0ABNvbkNvbnRleHRNZW51Q2xvc2Vkc3EAfgAMXaIKSnQAFG9uQXBwbHlUaGVtZVJlc291cmNlc3EAfgAMz9pjP3QAEnNldFN1cHBvcnRQcm9ncmVzc3NxAH4ADAq3lqx0AAxnZXRBY3Rpb25CYXJzcQB+AAzIniOvdAAYaXNDaGFuZ2luZ0NvbmZpZ3VyYXRpb25zc3EAfgAMe117V3QAGmRpc3BhdGNoR2VuZXJpY01vdGlvbkV2ZW50c3EAfgAM0UKQ6nQAGnN0YXJ0TG9jYWxWb2ljZUludGVyYWN0aW9uc3EAfgAM83r/TnQADGRvTG9hZGVyU3RvcHNxAH4ADLG9JQd0ACBpc0xvY2FsVm9pY2VJbnRlcmFjdGlvblN1cHBvcnRlZHNxAH4ADNNsfRd0AAlnZXRTdHJpbmdzcQB+AAyeLZ2JdAAMc3luY2hyb25pemVkc3EAfgAMWiv4L3QAG29uU3VwcG9ydEFjdGlvbk1vZGVGaW5pc2hlZHNxAH4ADLenLDB0AB9zZXRTdXBwb3J0UHJvZ3Jlc3NCYXJWaXNpYmlsaXR5c3EAfgAMviNV6HQADGRhdGFiYXNlTGlzdHNxAH4ADAJFo+Z0ABNvbkNyZWF0ZURlc2NyaXB0aW9uc3EAfgAMT0dfUnQAEmlzVm9pY2VJbnRlcmFjdGlvbnNxAH4ADPspCS50ABNvbkNoaWxkVGl0bGVDaGFuZ2Vkc3EAfgAM/+CfxnQAEG1NZWRpYUNvbnRyb2xsZXJzcQB+AAxnUORzdAAKZ2V0T2JiRGlyc3NxAH4ADEUh1/x0ABphcHBseU92ZXJyaWRlQ29uZmlndXJhdGlvbnNxAH4ADD7FXcV0AAxvblJlYWxseVN0b3BzcQB+AAwXVaAGdAAMc2V0SW1tZXJzaXZlc3EAfgAM21tFbXQAFW9uSGFzV2luZG93QW5pbWF0aW9uc3NxAH4ADJ6ceqF0ABVvbkNvbnRleHRJdGVtU2VsZWN0ZWRzcQB+AAyvJY8KdAAbZW5mb3JjZUNhbGxpbmdVcmlQZXJtaXNzaW9uc3EAfgAMBLUbZ3QADSRpc0luc3RhbmNlT2ZzcQB+AAz+exkCdAAPc3RhcnRBY3Rpdml0aWVzc3EAfgAMndDg43QAGnN0YXJ0SW50ZW50U2VuZGVyRm9yUmVzdWx0c3EAfgAMTKiHIHQACG1SZXN1bWVkc3EAfgAMRJLp2XQACGdldFRpdGxlc3EAfgAMdRylrXQAEGdldFN5c3RlbVNlcnZpY2VzcQB+AAyIHpAEdAARZ2V0Q2FsbGluZ1BhY2thZ2VzcQB+AAzyyzYIdAAZY2hlY2tDYWxsaW5nVXJpUGVybWlzc2lvbnNxAH4ADCMi+t10AAtnZXREcmF3YWJsZXNxAH4ADAjTq2h0ABlvdmVycmlkZVBlbmRpbmdUcmFuc2l0aW9uc3EAfgAM7a7sM3QAH2NoZWNrQ2FsbGluZ09yU2VsZlVyaVBlcm1pc3Npb25zcQB+AAzy53oNdAALZ2V0RGVsZWdhdGVzcQB+AAzxo9i8dAARb25DcmVhdGVQYW5lbFZpZXdzcQB+AAypFpOSdAAUZ2V0RXh0ZXJuYWxDYWNoZURpcnNzcQB+AAwudLqRdAASb25BdHRhY2hlZFRvV2luZG93c3EAfgAMrzBScnQAEW1XaW5kb3dBbmltYXRpb25zc3EAfgAMQM5OjnQAIHNlbmRTdGlja3lPcmRlcmVkQnJvYWRjYXN0QXNVc2Vyc3EAfgAMQoH/enQAC2dldEFjdGl2aXR5c3EAfgAMGc7ePXQAImRpc3BhdGNoUG9wdWxhdGVBY2Nlc3NpYmlsaXR5RXZlbnRzcQB+AAxvZ2N7dAAKaXNUYXNrUm9vdHNxAH4ADFZto0J0ABdnZXRSZXF1ZXN0ZWRPcmllbnRhdGlvbnNxAH4ADBipmdl0AAtiaW5kU2VydmljZXNxAH4ADGYiA0p0AAhtSGFuZGxlcnNxAH4ADMM3HAZ0AAtzdGFydFNlYXJjaHNxAH4ADD0TpZ50AARkdW1wc3EAfgAMOxU2f3QAE3NlbmRCcm9hZGNhc3RBc1VzZXJzcQB+AAzLCAULdAASZ2V0TWVkaWFDb250cm9sbGVyc3EAfgAMxgZPS3QAEW9uQ3JlYXRlUGFuZWxNZW51c3EAfgAMlQtuCXQACWdldFBhcmVudHNxAH4ADJljtuF0AA5kb0xvYWRlclJldGFpbnNxAH4ADO/48Gl0ABNnZXRFeHRlcm5hbEZpbGVzRGlyc3EAfgAMx6lZWXQADXJ1bk9uVWlUaHJlYWRzcQB+AAzWAMFYdAAOZ2V0Q2xhc3NMb2FkZXJzcQB+AAxG3++NdAAcdW5yZWdpc3RlckNvbXBvbmVudENhbGxiYWNrc3NxAH4ADAQl/Id0AApzaG93QXNzaXN0c3EAfgAM1Dqu6nQADmdldFByZWZlcmVuY2Vzc3EAfgAMjsi0d3QADG9uVHJpbU1lbW9yeXNxAH4ADFj28u90AA1zdGFydEFjdGl2aXR5c3EAfgAMDiYvN3QAG3N1cHBvcnRSZXF1ZXN0V2luZG93RmVhdHVyZXNxAH4ADP7KDRd0ABNzdGFydE1hbmFnaW5nQ3Vyc29yc3EAfgAMdKKNHnQAFG9wZW5PckNyZWF0ZURhdGFiYXNlc3EAfgAMo//9l3QAFmdldEZyYWdtZW50TWFuYWdlckltcGxzcQB+AAziP9BAdAANcGVla1dhbGxwYXBlcnNxAH4ADOJeuvV0ABFvblByb3ZpZGVSZWZlcnJlcnNxAH4ADJegE9V0AA1kaXNtaXNzRGlhbG9nc3EAfgAMJc1MLHQADG1hbmFnZWRRdWVyeXNxAH4ADMsY5pR0AAZmaW5pc2hzcQB+AAy2ojYNdAAeb25Mb2NhbFZvaWNlSW50ZXJhY3Rpb25TdG9wcGVkc3EAfgAMdWvWuHQACm1SZXRhaW5pbmdzcQB+AAzLFOrWdAAUZ2V0U2hhcmVkUHJlZmVyZW5jZXNzcQB+AAwztXnudAAZc3RvcExvY2FsVm9pY2VJbnRlcmFjdGlvbnNxAH4ADPnRgPB0AB9vblN0YXJ0SW50ZW50U2VuZGVyRnJvbUZyYWdtZW50c3EAfgAMsCyc2nQAE3Jldm9rZVVyaVBlcm1pc3Npb25zcQB+AAyit7oYdAAPb25QcmVwYXJlRGlhbG9nc3EAfgAMBfdv+XQAD2ZpbmlzaEZyb21DaGlsZHNxAH4ADBzv3Al0ABRzdGFydEluc3RydW1lbnRhdGlvbnNxAH4ADOvQ9790AAlub3RpZnlBbGxzcQB+AAx4j7cCdAATb25Qcm92aWRlQXNzaXN0RGF0YXNxAH4ADPyEskR0ABVvbk5hdmlnYXRlVXBGcm9tQ2hpbGRzcQB+AAxVDdZMdAANc3RhcnRMb2NrVGFza3NxAH4ADHmaxO50ABlnZXRTdXBwb3J0TWVkaWFDb250cm9sbGVyc3EAfgAM/9TvEnQAEXNldERlZmF1bHRLZXlNb2Rlc3EAfgAMiAx/rnQAEWVuZm9yY2VQZXJtaXNzaW9uc3EAfgAMWIGQi3QAEmluYWN0aXZhdGVGcmFnbWVudHNxAH4ADHjLHZh0ABNvblN1cHBvcnROYXZpZ2F0ZVVwc3EAfgAM3tn+MHQAEHJlZ2lzdGVyUmVjZWl2ZXJzcQB+AAyiKVsEdAAIbVN0b3BwZWRzcQB+AAzrSFAsdAARb25Vc2VySW50ZXJhY3Rpb25zcQB+AAz3RYrAdAASZ2V0Q2FsbGluZ0FjdGl2aXR5c3EAfgAMaQ4TiXQAD2dldEN1cnJlbnRGb2N1c3NxAH4ADCXdK8d0AAdvbktleVVwc3EAfgAMZp7jS3QAF29uVmlzaWJsZUJlaGluZENhbmNlbGVkc3EAfgAMiGP56nQAE2dldFN1cHBvcnRBY3Rpb25CYXJzcQB+AAykkFcddAAMb25Ub3VjaEV2ZW50c3EAfgAMoLj2ZnQAHm9uTG9jYWxWb2ljZUludGVyYWN0aW9uU3RhcnRlZHNxAH4ADH9WmDp0AB5lbmZvcmNlQ2FsbGluZ09yU2VsZlBlcm1pc3Npb25zcQB+AAwa2nbwdAAIcmVjcmVhdGVzcQB+AAwPCd4TdAAZc3RhcnRBY3Rpdml0eUZyb21GcmFnbWVudHNxAH4ADHAhfGN0AA5kZWxldGVEYXRhYmFzZXNxAH4ADNHK98l0ABFvbkNyZWF0ZVRodW1ibmFpbHNxAH4ADBG9sUl0AAxpc0luc3RhbmNlT2ZzcQB+AAw9z6EDdAAUcmVxdWVzdFZpc2libGVCZWhpbmRzcQB+AAwybvFPdAAVb25PcHRpb25zSXRlbVNlbGVjdGVkc3EAfgAM+AruMHQAFnJlZ2lzdGVyRm9yQ29udGV4dE1lbnVzcQB+AAwOlvUodAAcbVN0YXJ0ZWRBY3Rpdml0eUZyb21GcmFnbWVudHNxAH4ADOOkB6p0AAtkdW1wTG9hZGVyc3NxAH4ADHX319d0AAhvbkNyZWF0ZXNxAH4ADDUfHZd0AB1zZXRFbnRlclNoYXJlZEVsZW1lbnRDYWxsYmFja3NxAH4ADAWMJX90ACFvbldpbmRvd1N0YXJ0aW5nU3VwcG9ydEFjdGlvbk1vZGVzcQB+AAwrY5oFdAAVc3RhcnRBY3Rpdml0eUlmTmVlZGVkc3EAfgAMj16OxXQAG2dldENvbnRlbnRUcmFuc2l0aW9uTWFuYWdlcnNxAH4ADF/EqjJ0ABZnZXRQYWNrYWdlUmVzb3VyY2VQYXRoc3EAfgAMq1Q4wHQAHXJlcXVlc3REcmFnQW5kRHJvcFBlcm1pc3Npb25zc3EAfgAMuCoxhXQAG29uQ3JlYXRlTmF2aWdhdGVVcFRhc2tTdGFja3NxAH4ADK1wT+x0AB1zdGFydEludGVudFNlbmRlckZyb21GcmFnbWVudHNxAH4ADCq8KpB0AAxzdG9wTG9ja1Rhc2tzcQB+AAzY//BcdAAdc3RhcnRQb3N0cG9uZWRFbnRlclRyYW5zaXRpb25zcQB+AAwv9hN5dAAPZ2V0TWVudUluZmxhdGVyc3EAfgAMu0cKmXQAFW9uUHJlcGFyZU9wdGlvbnNQYW5lbHNxAH4ADAddaWZ0ABZzdGFydEFjdGl2aXR5Rm9yUmVzdWx0c3EAfgAMszYM73QAGnNldEZlYXR1cmVEcmF3YWJsZVJlc291cmNlc3EAfgAMy1LclXQADm1vdmVUYXNrVG9CYWNrc3EAfgAMi6tuy3QABmdldERpcnNxAH4ADJvVV/V0ABJvbk1lbnVJdGVtU2VsZWN0ZWRzcQB+AAx6WWu+dAAlZ2V0TGFzdEN1c3RvbU5vbkNvbmZpZ3VyYXRpb25JbnN0YW5jZXNxAH4ADEc4lQl0ACxzZXRTdXBwb3J0UHJvZ3Jlc3NCYXJJbmRldGVybWluYXRlVmlzaWJpbGl0eXNxAH4ADDN+99h0ABxjaGVja0NhbGxpbmdPclNlbGZQZXJtaXNzaW9uc3EAfgAM1XAwWHQABjxpbml0PnNxAH4ADDWPcNV0AAxzdGFydFNlcnZpY2VzcQB+AAzXWEuadAATZmluaXNoQW5kUmVtb3ZlVGFza3NxAH4ADDT12it0AAhmaWxlTGlzdHNxAH4ADAQfvnR0AA5vbktleUxvbmdQcmVzc3NxAH4ADAfgPId0ABFnZXRMb2NhbENsYXNzTmFtZXNxAH4ADAQqcbB0ABtvblN0YXJ0QWN0aXZpdHlGcm9tRnJhZ21lbnRzcQB+AAy0a1y7dAASZ3JhbnRVcmlQZXJtaXNzaW9uc3EAfgAMRDN1KHQAD29uVXNlckxlYXZlSGludHNxAH4ADMBfeBt0ABFvbkFjdGl2aXR5UmVlbnRlcnNxAH4ADOQ8LmR0ACNjcmVhdGVEZXZpY2VQcm90ZWN0ZWRTdG9yYWdlQ29udGV4dHNxAH4ADOLzUlh0ABBjbG9zZU9wdGlvbnNNZW51c3EAfgAMs1D0vXQAJHN1cHBvcnRTdGFydFBvc3Rwb25lZEVudGVyVHJhbnNpdGlvbnNxAH4ADMFGr8p0AAtvbkxvd01lbW9yeXNxAH4ADP7v8s10ABltb3ZlU2hhcmVkUHJlZmVyZW5jZXNGcm9tc3EAfgAMQNJDWnQAE3NldFN1cHBvcnRBY3Rpb25CYXJzcQB+AAyxDF7ZdAAQZ2V0UmV0YWluTG9hZGVyc3NxAH4ADFyaJ0h0ABRjcmVhdGVQYWNrYWdlQ29udGV4dHNxAH4ADKXxdlN0ABZzdGFydEFjdGl2aXR5RnJvbUNoaWxkc3EAfgAMczjx6XQAEmdldEFwcGxpY2F0aW9uSW5mb3NxAH4ADLLxy010AA9nZXRDb250ZW50U2NlbmVzcQB+AAzc7dSwdAAUY3JlYXRlRGlzcGxheUNvbnRleHRzcQB+AAwZeO8QdAAab25Qcm92aWRlS2V5Ym9hcmRTaG9ydGN1dHNzcQB+AAyCWnR8dAAYZGlzcGF0Y2hLZXlTaG9ydGN1dEV2ZW50c3EAfgAM1LEhpHQAF2dldFBhcmVudEFjdGl2aXR5SW50ZW50c3EAfgAMToXI0nQAEG9uQWN0aXZpdHlSZXN1bHRzcQB+AAyNX+uYdAACPT1zcQB+AAysbmbqdAAOb3BlbkZpbGVPdXRwdXRzcQB+AAyL+Gr3dAAOb25QcmVwYXJlUGFuZWxzcQB+AAzwcf9UdAAXZGVsZXRlU2hhcmVkUHJlZmVyZW5jZXNzcQB+AAx2Q5LGdAASZ2V0RnJhZ21lbnRNYW5hZ2Vyc3EAfgAMED6LtnQACXNldFJlc3VsdHNxAH4ADCDU68B0ABZpc1ZvaWNlSW50ZXJhY3Rpb25Sb290c3EAfgAMWJR9DnQAD3JlbGVhc2VJbnN0YW5jZXNxAH4ADNzBMhx0ABRnZXRMb2FkZXJNYW5hZ2VySW1wbHNxAH4ADEJX74Z0ABxzZXRFeGl0U2hhcmVkRWxlbWVudENhbGxiYWNrc3EAfgAM4Y+/WXQABnRoaXMkMHNxAH4ADG4LWJp0AAVjbG9uZXNxAH4ADB7M0xR0ABVyZXRhaW5Mb2FkZXJOb25Db25maWdzcQB+AAxFewsIdAAVc2V0RmVhdHVyZURyYXdhYmxlVXJpc3EAfgAMeRwQR3QACW9uRGVzdHJveXNxAH4ADInk7hd0ABpvblN1cHBvcnRBY3Rpb25Nb2RlU3RhcnRlZHNxAH4ADMI1xW10AA1vbktleU11bHRpcGxlc3EAfgAMxUGxQ3QAFm9uQ29uZmlndXJhdGlvbkNoYW5nZWRzcQB+AAwpXiQHdAAOYWRkQ29udGVudFZpZXdzcQB+AAyWj8SzdAAMb25DcmVhdGVWaWV3c3EAfgAMsm5HQXQAInNldFN1cHBvcnRQcm9ncmVzc0JhckluZGV0ZXJtaW5hdGVzcQB+AAwolXIEdAAac3RhcnRJbnRlbnRTZW5kZXJGcm9tQ2hpbGRzcQB+AAwkn62UdAAWb2J0YWluU3R5bGVkQXR0cmlidXRlc3NxAH4ADCyK6Xx0AB9nZXRMYXN0Tm9uQ29uZmlndXJhdGlvbkluc3RhbmNlc3EAfgAMzE2RcnQACW9uUmVzdGFydHNxAH4ADDJpMTZ0ABZvblJlc3RvcmVJbnN0YW5jZVN0YXRlc3EAfgAMwWPXj3QAHWRpc3BhdGNoRnJhZ21lbnRzT25DcmVhdGVWaWV3c3EAfgAMYRfngHQAG3NldENvbnRlbnRUcmFuc2l0aW9uTWFuYWdlcnNxAH4ADPk/mrF0AA5zZXRDb250ZW50Vmlld3NxAH4ADGpjmn10AAhtQ3JlYXRlZHNxAH4ADIURO7d0AAxzZXRBY3Rpb25CYXJzcQB+AAwKLi0KdAAOZ2V0QmFzZUNvbnRleHRzcQB+AAwsgGURdAAYc2V0UHJvZ3Jlc3NCYXJWaXNpYmlsaXR5c3EAfgAMkF0LZXQAHmdldFN1cHBvcnRQYXJlbnRBY3Rpdml0eUludGVudHNxAH4ADBMNrrl0ACVzZXRQcm9ncmVzc0JhckluZGV0ZXJtaW5hdGVWaXNpYmlsaXR5c3EAfgAMkseYQ3QAJHNob3VsZFNob3dSZXF1ZXN0UGVybWlzc2lvblJhdGlvbmFsZXNxAH4ADJey4oB0ABlzdGFydE5leHRNYXRjaGluZ0FjdGl2aXR5c3EAfgAMdxA3FHQACmRlbGV0ZUZpbGVzcQB+AAwhj3/zdAAKc2hvd0RpYWxvZ3NxAH4ADKK1ig10ABNpc0luTXVsdGlXaW5kb3dNb2Rlc3EAfgAM25Ku9XQAEWdldEZpbGVTdHJlYW1QYXRoc3EAfgAMGnzrwnQADW9uS2V5U2hvcnRjdXRzcQB+AAwcmTCLdAAKZ2V0Q29udGV4dHNxAH4ADKhlyXN0AA5vbkNyZWF0ZURpYWxvZ3NxAH4ADOdA7T50AAhtQ29udGV4dHNxAH4ADONMyEB0AAhzZXRUaGVtZXNxAH4ADPZ1evB0ABJyZXF1ZXN0UGVybWlzc2lvbnNzcQB+AAzoH6rddAAmb25SZXRhaW5DdXN0b21Ob25Db25maWd1cmF0aW9uSW5zdGFuY2VzcQB+AAwCt6esdAAIdG9TdHJpbmdzcQB+AAx9IlVsdAAhbVJlcXVlc3RlZFBlcm1pc3Npb25zRnJvbUZyYWdtZW50c3EAfgAM+2xiSnQAC3N0b3BTZXJ2aWNlc3EAfgAMuXm8QnQACmdldEhhbmRsZXJzcQB+AAxvqpGIdAAfbVBlbmRpbmdGcmFnbWVudEFjdGl2aXR5UmVzdWx0c3NxAH4ADD2zU/10ABhvbkVudGVyQW5pbWF0aW9uQ29tcGxldGVzcQB+AAxW2DQ0dAAKZ2V0RGF0YURpcnNxAH4ADGrgenl0ABpyZWdpc3RlckNvbXBvbmVudENhbGxiYWNrc3NxAH4ADCHssPt0ACBvblJlcXVlc3RQZXJtaXNzaW9uc0Zyb21GcmFnbWVudHNxAH4ADEfi9Zp0ACZvblNob3VsZFNob3dSZXF1ZXN0UGVybWlzc2lvblJhdGlvbmFsZXNxAH4ADFwt1Y90AAIhPXNxAH4ADA3FUxN0AAxnZXRXYWxscGFwZXJzcQB+AAxYHU1AdAASc2V0TWVkaWFDb250cm9sbGVyc3EAfgAMqwEhkHQAF3NldEZpbmlzaE9uVG91Y2hPdXRzaWRlc3EAfgAM47l/ZXQAFWdldEFwcGxpY2F0aW9uQ29udGV4dHNxAH4ADEvckVN0AA5vblRpdGxlQ2hhbmdlZHNxAH4ADP0pDkV0AA5nZXRQYWNrYWdlTmFtZXNxAH4ADF+q0Ih0AB5kaXNtaXNzS2V5Ym9hcmRTaG9ydGN1dHNIZWxwZXJzcQB+AAwfBcHrdAAJb25HZXRIb3N0c3EAfgAMoTnhqnQAG3NldFByb2dyZXNzQmFySW5kZXRlcm1pbmF0ZXNxAH4ADKukEBl0AAhnZXRDbGFzc3NxAH4ADPTYcpZ0ABBkaXNwYXRjaEtleUV2ZW50c3EAfgAMoBjiAXQAHHJlcXVlc3RTaG93S2V5Ym9hcmRTaG9ydGN1dHNzcQB+AAzzPOu5dAAUb25HZW5lcmljTW90aW9uRXZlbnRzcQB+AAzCRHJ+dAAKc2V0VmlzaWJsZXNxAH4ADHyDn/50ABRlbmZvcmNlVXJpUGVybWlzc2lvbnNxAH4ADLXIFGZ0AAZvblN0b3BzcQB+AAxBwa62dAAcb25QcmVwYXJlTmF2aWdhdGVVcFRhc2tTdGFja3NxAH4ADOWXPWh0AAxvblBvc3RSZXN1bWVzcQB+AAx80ao4dAAVcmVtb3ZlU3RpY2t5QnJvYWRjYXN0c3EAfgAMh9x5qXQAIG1TdGFydGVkSW50ZW50U2VuZGVyRnJvbUZyYWdtZW50c3EAfgAMyltDaXQAGW9uU2hvdWxkU2F2ZUZyYWdtZW50U3RhdGVzcQB+AAy44pwmdAATb25PcHRpb25zTWVudUNsb3NlZHNxAH4ADNiFTMZ0AAdpc0NoaWxkc3EAfgAM9RKuDXQACXNldEludGVudHNxAH4ADCR202N0ABNvbkNyZWF0ZU9wdGlvbnNNZW51c3EAfgAMvtRbWnQADGdldFJlc291cmNlc3NxAH4ADBEBJtZ0ABdnZXREcmF3ZXJUb2dnbGVEZWxlZ2F0ZXNxAH4ADM8piaZ0ABFvblJlc3VtZUZyYWdtZW50c3NxAH4ADIyywIh0ABlzaG93TG9ja1Rhc2tFc2NhcGVNZXNzYWdlc3EAfgAMhbFLO3QAEXJlcG9ydExvYWRlclN0YXJ0c3EAfgAMbPlqhHQAGWVudGVyUGljdHVyZUluUGljdHVyZU1vZGVzcQB+AAwfBNx2dAASZ2V0Vm9pY2VJbnRlcmFjdG9yc3EAfgAM29gVaHQAF3NldEZlYXR1cmVEcmF3YWJsZUFscGhhc3EAfgAMaexJHnQAF2ZpbmlzaEFjdGl2aXR5RnJvbUNoaWxkc3EAfgAMbqhfg3QAEXN0YXJ0SW50ZW50U2VuZGVyc3EAfgAMOMLOHXQAF29uQmFja1ByZXNzZWROb3RIYW5kbGVkc3EAfgAMjNnZoXQAEHNldFZyTW9kZUVuYWJsZWRzcQB+AAwNt12udAAabU5leHRDYW5kaWRhdGVSZXF1ZXN0SW5kZXhzcQB+AAzEvDRKdAASZGlzcGF0Y2hUb3VjaEV2ZW50c3EAfgAMIvuWWHQAE2dldE5vQmFja3VwRmlsZXNEaXJzcQB+AAxBShUvdAAjb25QcmVwYXJlU3VwcG9ydE5hdmlnYXRlVXBUYXNrU3RhY2tzcQB+AAyhEI/BdAACbmVzcQB+AAxIgINJdAAObVJlYWxseVN0b3BwZWRzcQB+AAwXF1kXdAAXcG9zdHBvbmVFbnRlclRyYW5zaXRpb25zcQB+AAyPC2YgdAAHb25TdGFydHNxAH4ADCReh/x0ABlnZXRDaGFuZ2luZ0NvbmZpZ3VyYXRpb25zc3EAfgAMDUgtJnQAFWludmFsaWRhdGVPcHRpb25zTWVudXNxAH4ADJZ2LWJ0AA9jaGVja1Blcm1pc3Npb25zcQB+AAw5ooNLdAAZZ2V0U3VwcG9ydEZyYWdtZW50TWFuYWdlcnNxAH4ADN3ljrN0ABdzZXRSZXF1ZXN0ZWRPcmllbnRhdGlvbnNxAH4ADCD5H6N0AA1Ib3N0Q2FsbGJhY2tzc3EAfgAM0lWbMXQADG5hdmlnYXRlVXBUb3NxAH4ADJtoif10AAxvbk5hdmlnYXRlVXBzcQB+AAy/1ee3dAAZc2V0U3VwcG9ydE1lZGlhQ29udHJvbGxlcnNxAH4ADJ0iNUl0ABJnZXRQYWNrYWdlQ29kZVBhdGhzcQB+AAxtKndUdAAUb25XaW5kb3dGb2N1c0NoYW5nZWRzcQB+AAzX8KZxdAAQZ2V0V2luZG93TWFuYWdlcnNxAH4ADILsVn50ABVvbkdldFdpbmRvd0FuaW1hdGlvbnNzcQB+AAwxbzOjdAAKbUZyYWdtZW50c3NxAH4ADEYLwJN0AA9kb0xvYWRlckRlc3Ryb3lzcQB+AAyB9IUJdAATb25BY3Rpb25Nb2RlU3RhcnRlZHNxAH4ADFZKxZB0AAJlcXNxAH4ADC5H0Zt0ABBnZXRDb21wb25lbnROYW1lc3EAfgAMistEjXQADXNldFRpdGxlQ29sb3JzcQB+AAwNCaLNdAAUc2VuZE9yZGVyZWRCcm9hZGNhc3RzcQB+AAyVd6zsdAAQb25Db250ZW50Q2hhbmdlZHNxAH4ADO/gFlZ0ABdvblN1cHBvcnRDb250ZW50Q2hhbmdlZHNxAH4ADMujj9h0ABBvblRyYWNrYmFsbEV2ZW50c3EAfgAMccw0AHQACWdldEludGVudHNxAH4ADBjXhCt0ABxzdXBwb3J0RmluaXNoQWZ0ZXJUcmFuc2l0aW9uc3EAfgAMRmI5GHQAB2dldFRleHRzcQB+AAydjEOudAAWc3RhcnRTdXBwb3J0QWN0aW9uTW9kZXNxAH4ADNnAdSR0AAIjI3NxAH4ADGFuzNl0AAhmaW5hbGl6ZXNxAH4ADHOhEgx0ABZyZXN0b3JlTG9hZGVyTm9uQ29uZmlnc3EAfgAMc/Ml83QADGZpbmRWaWV3QnlJZHNxAH4ADLRmcE10ABRnZXRFeHRlcm5hbEZpbGVzRGlyc3NxAH4ADCsCPLR0AAhoYXNoQ29kZXNxAH4ADCBoCyZ0ABNzdXBwb3J0TmF2aWdhdGVVcFRvc3EAfgAMW+ywanQAFm9uUHJvdmlkZUFzc2lzdENvbnRlbnRzcQB+AAxLWOGadAAOb25GaW5kVmlld0J5SWRzcQB+AAxA9kuQdAAQcmVwb3J0RnVsbHlEcmF3bnNxAH4ADM8MUl10ABNjcmVhdGVQZW5kaW5nUmVzdWx0c3EAfgAM/uKJEHQAD2dldERhdGFiYXNlUGF0aHNxAH4ADIS5FPJ0AA1kb0xvYWRlclN0YXJ0c3EAfgAMvuLZKnQADG9uUG9zdENyZWF0ZXNxAH4ADHtIJCN0ABFnZXRMYXlvdXRJbmZsYXRlcnNxAH4ADHIINDZ0ACFlbmZvcmNlQ2FsbGluZ09yU2VsZlVyaVBlcm1pc3Npb25zcQB+AAxRjdjidAANZ2V0VGl0bGVDb2xvcnNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+A1d4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cAB0ACRhdC5maC5zd2VuZ2Iuc2llcnBpbnNraS5NYWluQWN0aXZpdHl1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAJ0ABRqYXZhLmxhbmcuRGVwcmVjYXRlZHQAEHNjYWxhLmRlcHJlY2F0ZWRzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cABwc3IAIHhzYnRpLlNhZmVMYXp5JCRhbm9uZnVuJHN0cmljdCQxAAAAAAAAAAACAAFMAAd2YWx1ZSQxcQB+A3J4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+A3EAcHNxAH4DdnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgNXTAAJaW5oZXJpdGVkcQB+A1dMAAdwYXJlbnRzcQB+A1d4cQB+A3pzcQB+A3EAcHNxAH4DdnVxAH4DUgAAAABzcQB+A3EAcHNxAH4DdnVxAH4DUgAAAABzcQB+A3EAcHNxAH4DdnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAAYc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4DeXQAEUFwcENvbXBhdEFjdGl2aXR5c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgN5c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAAFc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAdhbmRyb2lkc3EAfgOWdAAHc3VwcG9ydHNxAH4DlnQAAnY3c3EAfgOWdAADYXBwc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+A5dzcQB+A4p0ABBEZWxlZ2F0ZVByb3ZpZGVyc3EAfgOOc3EAfgORdXEAfgOUAAAABnNxAH4DlnQAB2FuZHJvaWRzcQB+A5Z0AAdzdXBwb3J0c3EAfgOWdAACdjdzcQB+A5Z0AANhcHBzcQB+A5Z0ABVBY3Rpb25CYXJEcmF3ZXJUb2dnbGVxAH4DoXNxAH4DinQAEVN1cHBvcnRQYXJlbnRhYmxlc3EAfgOOc3EAfgORdXEAfgOUAAAABnNxAH4DlnQAB2FuZHJvaWRzcQB+A5Z0AAdzdXBwb3J0c3EAfgOWdAACdjRzcQB+A5Z0AANhcHBzcQB+A5Z0ABBUYXNrU3RhY2tCdWlsZGVycQB+A6FzcQB+A4p0ABFBcHBDb21wYXRDYWxsYmFja3EAfgOQc3EAfgOKdAAQRnJhZ21lbnRBY3Rpdml0eXNxAH4DjnNxAH4DkXVxAH4DlAAAAAVzcQB+A5Z0AAdhbmRyb2lkc3EAfgOWdAAHc3VwcG9ydHNxAH4DlnQAAnY0c3EAfgOWdAADYXBwcQB+A6FzcQB+A4p0ACZSZXF1ZXN0UGVybWlzc2lvbnNSZXF1ZXN0Q29kZVZhbGlkYXRvcnNxAH4DjnNxAH4DkXVxAH4DlAAAAAZzcQB+A5Z0AAdhbmRyb2lkc3EAfgOWdAAHc3VwcG9ydHNxAH4DlnQAAnY0c3EAfgOWdAADYXBwc3EAfgOWdAATQWN0aXZpdHlDb21wYXRBcGkyM3EAfgOhc3EAfgOKdAAiT25SZXF1ZXN0UGVybWlzc2lvbnNSZXN1bHRDYWxsYmFja3NxAH4DjnNxAH4DkXVxAH4DlAAAAAZzcQB+A5Z0AAdhbmRyb2lkc3EAfgOWdAAHc3VwcG9ydHNxAH4DlnQAAnY0c3EAfgOWdAADYXBwc3EAfgOWdAAOQWN0aXZpdHlDb21wYXRxAH4DoXNxAH4DinQAFkJhc2VGcmFnbWVudEFjdGl2aXR5SkJxAH4DxHNxAH4DinQAHUJhc2VGcmFnbWVudEFjdGl2aXR5SG9uZXljb21icQB+A8RzcQB+A4p0ABpCYXNlRnJhZ21lbnRBY3Rpdml0eUVjbGFpcnEAfgPEc3EAfgOKdAAZQmFzZUZyYWdtZW50QWN0aXZpdHlEb251dHEAfgPEc3EAfgOKdAAIQWN0aXZpdHlzcQB+A45zcQB+A5F1cQB+A5QAAAADc3EAfgOWdAAHYW5kcm9pZHNxAH4DlnQAA2FwcHEAfgOhc3EAfgOKdAATQ29tcG9uZW50Q2FsbGJhY2tzMnNxAH4DjnNxAH4DkXVxAH4DlAAAAANzcQB+A5Z0AAdhbmRyb2lkc3EAfgOWdAAHY29udGVudHEAfgOhc3EAfgOKdAASQ29tcG9uZW50Q2FsbGJhY2tzcQB+BABzcQB+A4p0ABtPbkNyZWF0ZUNvbnRleHRNZW51TGlzdGVuZXJzcQB+A45zcQB+A5F1cQB+A5QAAAAEc3EAfgOWdAAHYW5kcm9pZHNxAH4DlnQABHZpZXdzcQB+A5Z0AARWaWV3cQB+A6FzcQB+A4p0AAhDYWxsYmFja3NxAH4DjnNxAH4DkXVxAH4DlAAAAARzcQB+A5Z0AAdhbmRyb2lkc3EAfgOWdAAEdmlld3NxAH4DlnQACEtleUV2ZW50cQB+A6FzcQB+A4p0AAhDYWxsYmFja3NxAH4DjnNxAH4DkXVxAH4DlAAAAARzcQB+A5Z0AAdhbmRyb2lkc3EAfgOWdAAEdmlld3NxAH4DlnQABldpbmRvd3EAfgOhc3EAfgOKdAAIRmFjdG9yeTJzcQB+A45zcQB+A5F1cQB+A5QAAAAEc3EAfgOWdAAHYW5kcm9pZHNxAH4DlnQABHZpZXdzcQB+A5Z0AA5MYXlvdXRJbmZsYXRlcnEAfgOhc3EAfgOKdAAHRmFjdG9yeXEAfgQsc3EAfgOKdAATQ29udGV4dFRoZW1lV3JhcHBlcnNxAH4DjnNxAH4DkXVxAH4DlAAAAANzcQB+A5Z0AAdhbmRyb2lkc3EAfgOWdAAEdmlld3EAfgOhc3EAfgOKdAAOQ29udGV4dFdyYXBwZXJxAH4EAHNxAH4DinQAB0NvbnRleHRxAH4EAHNxAH4DinQABk9iamVjdHNxAH4DjnNxAH4DkXVxAH4DlAAAAANzcQB+A5Z0AARqYXZhc3EAfgOWdAAEbGFuZ3EAfgOhc3EAfgOKdAADQW55c3EAfgOOc3EAfgORdXEAfgOUAAAAAnNxAH4DlnQABXNjYWxhcQB+A6F1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABHNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAJhdHNxAH4EVnQADGF0LmZoLnN3ZW5nYnNxAH4EVnQABWF0LmZoc3EAfgRWdAAXYXQuZmguc3dlbmdiLnNpZXJwaW5za2lzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVkDTM3JdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAVC9Vc2Vycy9sYXN6bG9iYWxvL3dvcmtzcGFjZS9zaWVycGluc2tpLWFuZHJvaWQvYXBwL2J1aWxkL2ludGVybWVkaWF0ZXMvY2xhc3Nlcy9kZWJ1Z3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFDFTUvBn14fzKN3wp2PeKuUC0KIm
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> 

external apis:
0 items
source infos:
7 items
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/buildConfig/debug/at/fh/swengb/sierpinski_android/BuildConfig.java -> 
AAAAAAAAAAA=
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/appcompat/R.java -> 
AAAAAAAAAAA=
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/cardview/R.java -> 
AAAAAAAAAAA=
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/android/support/v7/gridlayout/R.java -> 
AAAAAAAAAAA=
/Users/laszlobalo/workspace/sierpinski-android/app/build/generated/source/r/debug/at/fh/swengb/sierpinski_android/R.java -> 
AAAAAAAAAAA=
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/MainActivity.scala -> 
AAAAAAAAAAA=
/Users/laszlobalo/workspace/sierpinski-android/app/src/main/scala/at/fh/swengb/sierpinski/SierpinskiView.scala -> 
AAAAAAAAAAA=
compilations:
5 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWQM0OKN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAVC9Vc2Vycy9sYXN6bG9iYWxvL3dvcmtzcGFjZS9zaWVycGluc2tpLWFuZHJvaWQvYXBwL2J1aWxkL2ludGVybWVkaWF0ZXMvY2xhc3Nlcy9kZWJ1Z3QAAS8=
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWQNBaK91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAVC9Vc2Vycy9sYXN6bG9iYWxvL3dvcmtzcGFjZS9zaWVycGluc2tpLWFuZHJvaWQvYXBwL2J1aWxkL2ludGVybWVkaWF0ZXMvY2xhc3Nlcy9kZWJ1Z3QAAS8=
2 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWQNDEOd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAVC9Vc2Vycy9sYXN6bG9iYWxvL3dvcmtzcGFjZS9zaWVycGluc2tpLWFuZHJvaWQvYXBwL2J1aWxkL2ludGVybWVkaWF0ZXMvY2xhc3Nlcy9kZWJ1Z3QAAS8=
3 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWQNMzcl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAVC9Vc2Vycy9sYXN6bG9iYWxvL3dvcmtzcGFjZS9zaWVycGluc2tpLWFuZHJvaWQvYXBwL2J1aWxkL2ludGVybWVkaWF0ZXMvY2xhc3Nlcy9kZWJ1Z3QAAS8=
4 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWQNPuKJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAVC9Vc2Vycy9sYXN6bG9iYWxvL3dvcmtzcGFjZS9zaWVycGluc2tpLWFuZHJvaWQvYXBwL2J1aWxkL2ludGVybWVkaWF0ZXMvY2xhc3Nlcy9kZWJ1Z3QAAS8=
